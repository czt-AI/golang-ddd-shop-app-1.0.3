# 前端技术栈

## 1. 编程语言
- HTML5
- CSS3
- JavaScript

## 2. 前端框架
- Vue.js
- React

## 3. UI库
- Bootstrap
- Ant Design

## 4. 版本控制
- Git

## 5. 包管理器
- npm

## 6. 打包工具
- Webpack

## 7. 调试工具
- Chrome DevTools

## 8. 性能优化
- PWA（Progressive Web App）

## 9. 测试工具
- Jest
- Cypress

## 10. 部署工具
- Jenkins
- Docker

## 11. 其他
- GitFlow
- GitLab CI/CD

shop-app/1. 项目规划/1.4 确定技术栈/后端技术栈.docx
# 后端技术栈

## 1. 编程语言
- Golang

## 2. Web框架
- Gin
- Echo

## 3. ORM
- GORM

## 4. 微服务框架
- Go Micro
- Kubernetes

## 5. 数据库
- MySQL
- Redis

## 6. 消息队列
- RabbitMQ
- Kafka

## 7. API网关
- Kong
- Envoy

## 8. 服务发现
- Consul
- ZooKeeper

## 9. 测试框架
- Testify
- Ginkgo

## 10. 版本控制
- Git

## 11. 包管理器
- Go Modules

## 12. 配置管理
- Consul
- Vault

## 13. 日志管理
- Zap
- Logrus

## 14. 性能监控
- Prometheus
- Grafana

shop-app/1. 项目规划/1.4 确定技术栈/数据库技术栈.docx
# 数据库技术栈

## 1. 关系型数据库
- MySQL
- PostgreSQL

## 2. 非关系型数据库
- Redis
- MongoDB

## 3. 数据库连接池
- GORM
- MySQL-Connector/Go

## 4. 数据库迁移工具
- Flyway
- Liquibase

## 5. 数据库索引管理
- Go-Postgres-Index
- Go-Redis

## 6. 数据库性能监控
- Prometheus
- New Relic

shop-app/1. 项目规划/1.4 确定技术栈/其他技术栈.docx
# 其他技术栈

## 1. 容器化技术
- Docker

## 2. 容器编排
- Kubernetes

## 3. 编译工具
- CGO

## 4. 配置管理工具
- Ansible
- Terraform

## 5. 代码质量工具
- SonarQube
- ESLint

## 6. 代码覆盖率工具
- Go Cover
- Istanbul

## 7. 代码版本控制
- Git
- GitHub
- GitLab

## 8. CI/CD工具
- Jenkins
- GitLab CI/CD
- CircleCI