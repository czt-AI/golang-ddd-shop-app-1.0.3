package main

import (
	"context"
	"log"

	"github.com/streadway/amqp"
)

func main() {
	// 连接到RabbitMQ服务器
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")
	if err != nil {
		log.Fatalf("Failed to connect to RabbitMQ: %v", err)
	}
	defer conn.Close()

	ch, err := conn.Channel()
	if err != nil {
		log.Fatalf("Failed to open a channel: %v", err)
	}
	defer ch.Close()

	// 声明队列
	_, err = ch.QueueDeclare(
		"test_queue", // 队列名称
		true,         // 队列持久化
		false,        // 不自动删除队列
		false,        // 不独占队列
		false,        // 不等待队列声明
		nil,          // 队列参数
	)
	if err != nil {
		log.Fatalf("Failed to declare a queue: %v", err)
	}

	// 设置消息接收
	msgs, err := ch.Consume(
		"test_queue", // 队列名称
		"",           // 消费者标签
		true,         // 自动确认消息
		false,        // 不独占队列
		false,        // 不等待消息
		false,        // 不排除系统消息
		nil,          // 消费者参数
	)
	if err != nil {
		log.Fatalf("Failed to register a consumer: %v", err)
	}

	// 处理接收到的消息
	for d := range msgs {
		log.Printf("Received %s", d.Body)
	}
}