package main

import (
	"context"
	"log"

	"github.com/streadway/amqp"
)

func main() {
	// 连接到RabbitMQ服务器
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")
	if err != nil {
		log.Fatalf("Failed to connect to RabbitMQ: %v", err)
	}
	defer conn.Close()

	ch, err := conn.Channel()
	if err != nil {
		log.Fatalf("Failed to open a channel: %v", err)
	}
	defer ch.Close()

	// 声明队列
	_, err = ch.QueueDeclare(
		"test_queue", // 队列名称
		true,         // 队列持久化
		false,        // 不自动删除队列
		false,        // 不独占队列
		false,        // 不等待队列声明
		nil,          // 队列参数
	)
	if err != nil {
		log.Fatalf("Failed to declare a queue: %v", err)
	}

	// 发布消息到队列
	err = ch.Publish(
		"",         // 交换机名称，空字符串表示默认交换机
		"test_queue", // 队列名称
		false,       // 消息持久化
		false,       // 消费者确认
		amqp.Publishing{
			ContentType: "text/plain",
			Body:        []byte("Hello, RabbitMQ!"),
		},
	)
	if err != nil {
		log.Fatalf("Failed to publish a message: %v", err)
	}

	log.Printf(" [x] Sent %s", "Hello, RabbitMQ!")
}